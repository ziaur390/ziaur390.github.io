name: Build and deploy Zola site

on:
  push:
    branches:
      - main  

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      # Backup approach 1: Manual clone of theme if submodule fails
      - name: Clone theme manually (fallback)
        run: |
          if [ ! -d "themes/serene" ] || [ -z "$(ls -A themes/serene)" ]; then
            rm -rf themes/serene
            mkdir -p themes
            git clone -b latest https://github.com/isunjn/serene.git themes/serene
          fi

      # Install Zola with a specific version
      - name: Install Zola
        run: |
          wget -qO- https://github.com/getzola/zola/releases/download/v0.20.0/zola-v0.20.0-x86_64-unknown-linux-gnu.tar.gz | tar xz
          sudo mv zola /usr/local/bin

      # Debug: List content of theme directory
      - name: Debug theme installation
        run: |
          echo "Theme directory content:"
          ls -la themes/serene
          echo "Checking config file:"
          grep -i "theme" config.toml || echo "Theme not defined in config!"

      # Build the website
      - name: Build with Zola
        run: zola build
        
      # Debug: Check build output
      - name: Check build output
        run: |
          echo "Build output content:"
          ls -la public
          echo "CSS files:"
          find public -name "*.css" | sort

      # Upload pages artifact
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
